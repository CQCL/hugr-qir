---
source: tests/guppy.rs
expression: compile(&mut hugr)
---
; ModuleID = 'hugr-qir'
source_filename = "hugr-qir"

%RESULT = type opaque
%QUBIT = type opaque

@0 = private unnamed_addr constant [37 x i8] c"Expected variant 1 but got variant 0\00", align 1
@1 = private unnamed_addr constant [37 x i8] c"Expected variant 1 but got variant 0\00", align 1
@2 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@3 = pr, label %cond_exit_177, label %2

cond_exit_177._crit_edge:                         ; preds = %cond_exit_177, %10
  br label %0

2:                                                ; preds = %0
  %3 = call %RESULT* @__quantum__qis__m__body(%QUBIT* null)
  %4 = call i1 @__quantum__qis__read_result__body(%RESULT* %3)
  %5 = call %RESULT* @__quantum__qis__m__body(%QUBIT* inttoptr (i64 2 to %QUBIT*))
  %6 = call i1 @__quantum__qis__read_result__body(%RESULT* %5)
  call void @__quantum__rt__bool_record_output(i1 %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @2, i32 0, i32 0))
  call void @__quantum__rt__bool_record_output(i1 %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @3, i32 0, i32 0))
  ret void

cond_exit_177:                                    ; preds = %0
  call void @__quantum__qis__phasedx__body(double 0x3FF921FB54442D18, double 0xBFF921FB54442D18, %QUBIT* inttoptr (i64 1 to %QUBIT*))
  call void @__quantum__qis__rz__body(double 0x400921FB54442D18, %QUBIT* inttoptr (i64 1 to %QUBIT*))
  %7 = call %RESULT* @__quantum__qis__m__body(%QUBIT* inttoptr (i64 1 to %QUBIT*))
  %8 = call i1 @__quantum__qis__read_result__body(%RESULT* %7)
  %9 = add i64 %"19_0.0.reg2mem240.0.reg2mem244.0", 1
  br i1 %8, label %10, label %cond_exit_177._crit_edge

10:     l %cond_exit_230

0:                                                ; preds = %2, %cond_exit_243
  %"19_0.0.reg2mem240.0" = phi i64 [ 0, %cond_exit_243 ], [ %14, %2 ]
  %1 = icmp slt i64 %"19_0.0.reg2mem240.0", 10
  br i1 %1, label %10, label %5

cond_177_case_1:                                  ; preds = %10
  br label %cond_exit_177

2:                                                ; preds = %cond_exit_177._crit_edge, %15
  br label %0

cond_230_case_0:                                  ; preds = %alloca_block
  %3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @prelude.panic_template, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @0, i32 0, i32 0))
  call void @abort()
  br label %cond_exit_230

cond_exit_230:                                    ; preds = %cond_230_case_1, %cond_230_case_0
  br i1 true, label %cond_243_case_1, label %cond_243_case_0

cond_243_case_1:                                  ; preds = %cond_exit_230
  br label %cond_exit_243

cond_243_case_0:                                  ; preds = %cond_exit_230
  %4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @prelude.panic_template.1, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @1, i32 0, i32 0))
  call void @abort()
  br label %cond_exit_243

cond_exit_243:                                    ; preds = %cond_243_case_0, %cond_243_case_1
  %"013.0.reg2mem238.0" = phi %QUBIT* [ inttoptr (i64 2 to %QUBIT*), %cond_243_case_1 ], [ null, %cond_243_case_0 ]
  br label %0

5:                                                ; preds = %0
  %6 = call %RESULT* @__quantum__qis__m__body(%QUBIT* null)
  %7 = call i1 @__quantum__qis__read_result__body(%RESULT* %6)
  %8 = call %RESULT* @__quantum__qis__m__body(%QUBIT* %"013.0.reg2mem238.0")
  %9 = call i1 @__quantum__qis__read_result__body(%RESULT* %8)
  call void @__quantum__rt__bool_record_output(i1 %7, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @2, i32 0, i32 0))
  call void @__quantum__rt__bool_record_output(i1 %9, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @3, i32 0, i32 0))
  ret void

10:                                               ; preds = %0
  br i1 true, label %cond_177_case_1, label %cond_177_case_0

cond_177_case_0:                                  ; preds = %10
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @prelude.panic_template.2, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @4, i32 0, i32 0))
  call void @abort()
  br label %cond_exit_177

cond_exit_177:                                    ; preds = %cond_177_case_1, %cond_177_case_0
  %"0112.0.reg2mem.0" = phi %QUBIT* [ inttoptr (i64 1 to %QUBIT*), %cond_177_case_1 ], [ null, %cond_177_case_0 ]
  call void @__quantum__qis__phasedx__body(double 0x3FF921FB54442D18, double 0xBFF921FB54442D18, %QUBIT* %"0112.0.reg2mem.0")
  call void @__quantum__qis__rz__body(double 0x400921FB54442D18, %QUBIT* %"0112.0.reg2mem.0")
  %12 = call %RESULT* @__quantum__qis__m__body(%QUBIT* %"0112.0.reg2mem.0")
  %13 = call i1 @__quantum__qis__read_result__body(%RESULT* %12)
  %14 = add i64 %"19_0.0.reg2mem240.0", 1
  br i1 %13, label %15, label %cond_exit_177._crit_edge

cond_exit_177._crit_edge:                         ; preds = %cond_exit_177
  br label %2

15:                                               ; preds = %cond_exit_177
  call void @__quantum__qis__phasedx__body(double 0x3FF921FB54442D18, double 0xBFF921FB54442D18, %QUBIT* %"013.0.reg2mem238.0")
  call v
declare i1 @__quantum__qis__read_result__body(%RESULT*)

declare void @__quantum__rt__bool_record_output(i1, i8*)

declare void @__quantum__qis__phasedx__body(double, double, %QUBIT*)

declare void @__quantum__qis__rz__body(double, %QUBIT*)

attributes #0 = { "entry_point" "output_labeling_schema" "qir_profiles"="custom" "required_num_qubits"="20" "required_num_results"="20" }

!llvm.module.flags = !{!0, !1, !2, !3}

!0 = !{i32 1, !"qir_major_version", i32 1}
!1 = !{i32 7, !"qir_minor_version", i32 0}
!2 = !{i32 1, !"dynamic_qubit_management", i1 false}
!3 = !{i32 1, !"dynamic_result_management", i1 false}
