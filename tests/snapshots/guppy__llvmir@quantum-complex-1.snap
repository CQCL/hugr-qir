---
source: tests/guppy.rs
expression: compile(&mut hugr)
---
; ModuleID = 'hugr-qir'
source_filename = "hugr-qir"

%QUBIT = type opaque
%RESULT = type opaque

@0 = private unnamed_addr constant [37 x i8] c"Expected variant 1 but got variant 0\00", align 1
@prelude.panic_template = private unnamed_addr constant [34 x i8] c"Program panicked (signal %i): %s\0A\00", align 1
@1 = private unnamed_addr constant [37 x i8] c"Expected variant 1 but got variant 0\00", align 1
@prelude.panic_template.1 = private unnamed_addr constant [34 x i8] c"Program panicked (signal %i): %s\0A\00", align 1
@2 = private unnamed_addr constant [47 x i8] c"tket2.rotation.from_halfturns_unchecked failed\00", align 1
@prelude.panic_template.2 = private unnamed_addr constant [34 x i8] c"Program panicked (signal %i): %s\0A\00", align 1
@3 = private unnamed_addr constant [47 x i8] c"tket2.rotation.from_halfturns_unchecked failed\00", align 1
@prelude.panic_template.3 = private unnamed_addr constant [34 x i8] c"Program panicked (signal %i): %s\0A\00", align 1
@4 = private unnamed_addr constant [47 x i8] c"tket2.rotation.from_halfturns_unchecked failed\00", align 1
@prelude.panic_template.4 = private unnamed_addr constant [34 x i8] c"Program panicked (signal %i): %s\0A\00", align 1
@5 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@6 = private unnamed_addr constant [2 x i8] c"0\00", align 1

define void @__hugr__.main.1() #0 {
alloca_block:
  %0 = call %QUBIT* @__quantum__rt__qubit_allocate()
  %1 = insertvalue { i1, %QUBIT* } { i1 true, %QUBIT* poison }, %QUBIT* %0, 1
  %2 = call %QUBIT* @__quantum__rt__qubit_allocate()
  %3 = insertvalue { i1, %QUBIT* } { i1 true, %QUBIT* poison }, %QUBIT* %2, 1
  %4 = extractvalue { i1, %QUBIT* } %1, 0
  br i1 %4, label %cond_70_case_1, label %cond_70_case_0

cond_70_case_1:                                   ; preds = %alloca_block
  br label %cond_exit_70

cond_70_case_0:                                   ; preds = %alloca_block
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @prelude.panic_template, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @0, i32 0, i32 0))
  call void @abort()
  br label %cond_exit_70

cond_exit_70:                                     ; preds = %cond_70_case_1, %cond_70_case_0
  %"0.0" = phi %QUBIT* [ null, %cond_70_case_0 ], [ %0, %cond_70_case_1 ]
  call void @__quantum__qis__phasedx__body(double 0xBFF921FB54442D18, double 0x3FF921FB54442D18, %QUBIT* %"0.0")
  %6 = extractvalue { i1, %QUBIT* } %3, 0
  br i1 %6, label %cond_59_case_1, label %cond_59_case_0

cond_59_case_1:                                   ; preds = %cond_exit_70
  br label %cond_exit_59

cond_59_case_0:                                   ; preds = %cond_exit_70
  %7 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @prelude.panic_template.1, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @1, i32 0, i32 0))
  call void @abort()
  br label %cond_exit_59

cond_exit_59:                                     ; preds = %cond_59_case_1, %cond_59_case_0
  %"012.0" = phi %QUBIT* [ null, %cond_59_case_0 ], [ %2, %cond_59_case_1 ]
  call void @__quantum__qis__phasedx__body(double 0x3FF921FB54442D18, double 0xBFF921FB54442D18, %QUBIT* %"012.0")
  call void @__quantum__qis__rz__body(double 0x400921FB54442D18, %QUBIT* %"012.0")
  call void @__quantum__qis__rz__body(double 0x3FF921FB54442D18, %QUBIT* %"012.0")
  call void @__quantum__qis__rz__body(double 0x3FE921FB54442D18, %QUBIT* %"012.0")
  call void @__quantum__qis__phasedx__body(double 0x400921FB54442D18, double 0.000000e+00, %QUBIT* %"012.0")
  call void @__quantum__qis__phasedx__body(double 0x400921FB54442D18, double 0x3FF921FB54442D18, %QUBIT* %"012.0")
  call void @__quantum__qis__rz__body(double 0x400921FB54442D18, %QUBIT* %"012.0")
  call void @__quantum__qis__zzmax__body(%QUBIT* %"012.0", %QUBIT* %"0.0")
  call void @__quantum__qis__phasedx__body(double 0x3FF921FB54442D18, double 0x400921FB54442D18, %QUBIT* %"0.0")
  call void @__quantum__qis__rz__body(double 0xBFF921FB54442D18, %QUBIT* %"0.0")
  call void @__quantum__qis__rz__body(double 0xBFF921FB54442D18, %QUBIT* %"012.0")
  call void @__quantum__qis__phasedx__body(double 0x400921FB54442D18, double 0x400921FB54442D18, %QUBIT* %"012.0")
  call void @__quantum__qis__zzmax__body(%QUBIT* %"012.0", %QUBIT* %"0.0")
  call void @__quantum__qis__rz__body(double 0x3FF921FB54442D18, %QUBIT* %"0.0")
  %8 = call %RESULT* @__quantum__qis__m__body(%QUBIT* %"0.0")
  %9 = call i1 @__quantum__qis__read_result__body(%RESULT* %8)
  call void @__quantum__qis__phasedx__body(double 0x400921FB54442D18, double 0x3FF921FB54442D18, %QUBIT* %"012.0")
  call void @__quantum__qis__rz__body(double 0xBFF921FB54442D18, %QUBIT* %"012.0")
  br i1 true, label %12, label %10

10:                                               ; preds = %cond_exit_59
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @prelude.panic_template.2, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @2, i32 0, i32 0))
  call void @abort()
  unreachable

12:                                               ; preds = %cond_exit_59
  br i1 true, label %15, label %13

13:                                               ; preds = %12
  %14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @prelude.panic_template.3, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @3, i32 0, i32 0))
  call void @abort()
  unreachable

15:                                               ; preds = %12
  br i1 true, label %18, label %16

16:                                               ; preds = %15
  %17 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @prelude.panic_template.4, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @4, i32 0, i32 0))
  call void @abort()
  unreachable

18:                                               ; preds = %15
  call void @__quantum__qis__phasedx__body(double 0x4012D97C7F3321D2, double 0.000000e+00, %QUBIT* %"012.0")
  call void @__quantum__qis__phasedx__body(double 0x4012D97C7F3321D2, double 0x3FF921FB54442D18, %QUBIT* %"012.0")
  call void @__quantum__qis__rz__body(double 0x4012D97C7F3321D2, %QUBIT* %"012.0")
  %19 = call %RESULT* @__quantum__qis__m__body(%QUBIT* %"012.0")
  %20 = call i1 @__quantum__qis__read_result__body(%RESULT* %19)
  call void @__quantum__rt__bool_record_output(i1 %9, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @5, i32 0, i32 0))
  call void @__quantum__rt__bool_record_output(i1 %20, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @6, i32 0, i32 0))
  ret void
}

declare %QUBIT* @__quantum__rt__qubit_allocate()

declare i32 @printf(i8*, ...)

declare void @abort()

declare void @__quantum__qis__phasedx__body(double, double, %QUBIT*)

declare void @__quantum__qis__rz__body(double, %QUBIT*)

declare void @__quantum__qis__zzmax__body(%QUBIT*, %QUBIT*)

declare %RESULT* @__quantum__qis__m__body(%QUBIT*)

declare i1 @__quantum__qis__read_result__body(%RESULT*)

declare void @__quantum__rt__bool_record_output(i1, i8*)

attributes #0 = { "entry_point" "output_labeling_schema" "qir_profiles"="custom" "required_num_qubits"="20" "required_num_results"="20" }

!llvm.module.flags = !{!0, !1, !2, !3}

!0 = !{i32 1, !"qir_major_version", i32 1}
!1 = !{i32 7, !"qir_minor_version", i32 0}
!2 = !{i32 1, !"dynamic_qubit_management", i1 false}
!3 = !{i32 1, !"dynamic_result_management", i1 false}
