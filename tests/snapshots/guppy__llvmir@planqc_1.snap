---
source: tests/guppy.rs
expression: compile(&mut hugr)
---
; ModuleID = 'hugr-qir'
source_filename = "hugr-qir"

%QUBIT = type opaque
%RESULT = type opaque

@0 = private unnamed_addr constant [47 x i8] c"tket2.rotation.from_halfturns_unchecked failed\00", align 1
@prelude.panic_template = private unnamed_addr constant [34 x i8] c"Program panicked (signal %i): %s\0A\00", align 1
@1 = private unnamed_addr constant [37 x i8] c"Expected variant 1 but got variant 0\00", align 1
@prelude.panic_template.1 = private unnamed_addr constant [34 x i8] c"Program panicked (signal %i): %s\0A\00", align 1
@2 = private unnamed_addr constant [2 x i8] c"1\00", align 1

define %QUBIT* @__hugr__.rx.1(%QUBIT* %0, { { double } } %1) {
alloca_block:
  %"0" = alloca %QUBIT*, align 8
  %"2_0" = alloca %QUBIT*, align 8
  %"2_1" = alloca { { double } }, align 8
  %"4_0" = alloca %QUBIT*, align 8
  %"6_0" = alloca %QUBIT*, align 8
  %"6_1" = alloca { { double } }, align 8
  %"03" = alloca %QUBIT*, align 8
  %"19_0" = alloca { {} }, align 8
  %"63_0" = alloca %QUBIT*, align 8
  %"61_0" = alloca double, align 8
  %"59_0" = alloca double, align 8
  %"57_0" = alloca double, align 8
  %"52_0" = alloca double, align 8
  %"46_0" = alloca double, align 8
  %"44_0" = alloca double, align 8
  %"47_0" = alloca %QUBIT*, align 8
  %"42_0" = alloca double, align 8
  %"48_0" = alloca %QUBIT*, align 8
  %"18_0" = alloca { {} }, align 8
  %"16_0" = alloca { {} }, align 8
  %"11_0" = alloca { {} }, align 8
  %"9_0" = alloca double, align 8
  %"12_0" = alloca { { double } }, align 8
  %"13_0" = alloca double, align 8
  %"14_0" = alloca double, align 8
  %"50_0" = alloca double, align 8
  %"53_0" = alloca double, align 8
  %"54_0" = alloca %QUBIT*, align 8
  %"62_0" = alloca %QUBIT*, align 8
  br label %entry_block

entry_block:                                      ; preds = %alloca_block
  store %QUBIT* %0, %QUBIT** %"2_0", align 8
  store { { double } } %1, { { double } }* %"2_1", align 8
  %"2_01" = load %QUBIT*, %QUBIT** %"2_0", align 8
  %"2_12" = load { { double } }, { { double } }* %"2_1", align 8
  store %QUBIT* %"2_01", %QUBIT** %"6_0", align 8
  store { { double } } %"2_12", { { double } }* %"6_1", align 8
  br label %2

2:                                                ; preds = %entry_block
  %"6_04" = load %QUBIT*, %QUBIT** %"6_0", align 8
  %"6_15" = load { { double } }, { { double } }* %"6_1", align 8
  store %QUBIT* %"6_04", %QUBIT** %"6_0", align 8
  store { { double } } %"6_15", { { double } }* %"6_1", align 8
  store double 0xBFF921FB54442D18, double* %"61_0", align 8
  store double 0x3FF921FB54442D18, double* %"59_0", align 8
  store double 0x400921FB54442D18, double* %"57_0", align 8
  store double 0x400921FB54442D18, double* %"52_0", align 8
  store double 0xBFF921FB54442D18, double* %"46_0", align 8
  store double 0x3FF921FB54442D18, double* %"44_0", align 8
  %"6_06" = load %QUBIT*, %QUBIT** %"6_0", align 8
  %"44_07" = load double, double* %"44_0", align 8
  %"46_08" = load double, double* %"46_0", align 8
  call void @__quantum__qis__phasedx__body(double %"44_07", double %"46_08", %QUBIT* %"6_06")
  store %QUBIT* %"6_06", %QUBIT** %"47_0", align 8
  store double 0x400921FB54442D18, double* %"42_0", align 8
  %"47_09" = load %QUBIT*, %QUBIT** %"47_0", align 8
  %"42_010" = load double, double* %"42_0", align 8
  call void @__quantum__qis__rz__body(double %"42_010", %QUBIT* %"47_09")
  store %QUBIT* %"47_09", %QUBIT** %"48_0", align 8
  store { {} } undef, { {} }* %"19_0", align 1
  store { {} } undef, { {} }* %"18_0", align 1
  store { {} } undef, { {} }* %"16_0", align 1
  store { {} } undef, { {} }* %"11_0", align 1
  %"6_111" = load { { double } }, { { double } }* %"6_1", align 8
  %3 = extractvalue { { double } } %"6_111", 0
  %4 = extractvalue { double } %3, 0
  store double %4, double* %"9_0", align 8
  %"9_012" = load double, double* %"9_0", align 8
  %5 = insertvalue { double } undef, double %"9_012", 0
  %6 = insertvalue { { double } } poison, { double } %5, 0
  store { { double } } %6, { { double } }* %"12_0", align 8
  %"12_013" = load { { double } }, { { double } }* %"12_0", align 8
  %7 = extractvalue { { double } } %"12_013", 0
  %8 = extractvalue { double } %7, 0
  store double %8, double* %"13_0", align 8
  %"13_014" = load double, double* %"13_0", align 8
  %9 = fcmp oeq double %"13_014", 0x7FF0000000000000
  %10 = fcmp oeq double %"13_014", 0xFFF0000000000000
  %11 = fcmp uno double %"13_014", 0.000000e+00
  %12 = or i1 %9, %10
  %13 = or i1 %12, %11
  %14 = xor i1 %13, true
  br i1 %14, label %18, label %16

15:                                               ; preds = %20
  %"029" = load %QUBIT*, %QUBIT** %"03", align 8
  store %QUBIT* %"029", %QUBIT** %"4_0", align 8
  %"4_030" = load %QUBIT*, %QUBIT** %"4_0", align 8
  store %QUBIT* %"4_030", %QUBIT** %"0", align 8
  %"031" = load %QUBIT*, %QUBIT** %"0", align 8
  ret %QUBIT* %"031"

16:                                               ; preds = %2
  %17 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @prelude.panic_template, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @0, i32 0, i32 0))
  call void @abort()
  unreachable

18:                                               ; preds = %2
  store double %"13_014", double* %"14_0", align 8
  %"14_015" = load double, double* %"14_0", align 8
  store double %"14_015", double* %"50_0", align 8
  %"50_016" = load double, double* %"50_0", align 8
  %"52_017" = load double, double* %"52_0", align 8
  %19 = fmul double %"50_016", %"52_017"
  store double %19, double* %"53_0", align 8
  %"48_018" = load %QUBIT*, %QUBIT** %"48_0", align 8
  %"53_019" = load double, double* %"53_0", align 8
  call void @__quantum__qis__rz__body(double %"53_019", %QUBIT* %"48_018")
  store %QUBIT* %"48_018", %QUBIT** %"54_0", align 8
  %"54_020" = load %QUBIT*, %QUBIT** %"54_0", align 8
  %"59_021" = load double, double* %"59_0", align 8
  %"61_022" = load double, double* %"61_0", align 8
  call void @__quantum__qis__phasedx__body(double %"59_021", double %"61_022", %QUBIT* %"54_020")
  store %QUBIT* %"54_020", %QUBIT** %"62_0", align 8
  %"62_023" = load %QUBIT*, %QUBIT** %"62_0", align 8
  %"57_024" = load double, double* %"57_0", align 8
  call void @__quantum__qis__rz__body(double %"57_024", %QUBIT* %"62_023")
  store %QUBIT* %"62_023", %QUBIT** %"63_0", align 8
  %"19_025" = load { {} }, { {} }* %"19_0", align 1
  %"63_026" = load %QUBIT*, %QUBIT** %"63_0", align 8
  store { {} } %"19_025", { {} }* %"19_0", align 1
  store %QUBIT* %"63_026", %QUBIT** %"63_0", align 8
  %"19_027" = load { {} }, { {} }* %"19_0", align 1
  %"63_028" = load %QUBIT*, %QUBIT** %"63_0", align 8
  switch i32 0, label %20 [
  ]

20:                                               ; preds = %18
  %21 = extractvalue { {} } %"19_027", 0
  store %QUBIT* %"63_028", %QUBIT** %"03", align 8
  br label %15
}

declare void @__quantum__qis__phasedx__body(double, double, %QUBIT*)

declare void @__quantum__qis__rz__body(double, %QUBIT*)

declare i32 @printf(i8*, ...)

declare void @abort()

define void @__hugr__.main.20() {
alloca_block:
  %"37_0" = alloca { {} }, align 8
  %"64_0" = alloca { i32, {}, { %QUBIT* } }, align 8
  %"65_0" = alloca %QUBIT*, align 8
  %"0" = alloca %QUBIT*, align 8
  %"70_0" = alloca { i32, i8* }, align 8
  %"71_0" = alloca %QUBIT*, align 8
  %"05" = alloca %QUBIT*, align 8
  %"73_0" = alloca %QUBIT*, align 8
  %"36_0" = alloca { {} }, align 8
  %"33_0" = alloca { {} }, align 8
  %"30_0" = alloca double, align 8
  %"31_0" = alloca { { double } }, align 8
  %"32_0" = alloca %QUBIT*, align 8
  %"34_0" = alloca { i32, {}, {} }, align 8
  br label %entry_block

entry_block:                                      ; preds = %alloca_block
  br label %0

0:                                                ; preds = %entry_block
  %1 = call %QUBIT* @__quantum__rt__qubit_allocate()
  %2 = insertvalue { %QUBIT* } undef, %QUBIT* %1, 0
  %3 = insertvalue { i32, {}, { %QUBIT* } } { i32 1, {} poison, { %QUBIT* } poison }, { %QUBIT* } %2, 2
  store { i32, {}, { %QUBIT* } } %3, { i32, {}, { %QUBIT* } }* %"64_0", align 8
  %"64_01" = load { i32, {}, { %QUBIT* } }, { i32, {}, { %QUBIT* } }* %"64_0", align 8
  %4 = extractvalue { i32, {}, { %QUBIT* } } %"64_01", 0
  switch i32 %4, label %5 [
    i32 1, label %7
  ]

5:                                                ; preds = %0
  %6 = extractvalue { i32, {}, { %QUBIT* } } %"64_01", 1
  br label %cond_65_case_0

7:                                                ; preds = %0
  %8 = extractvalue { i32, {}, { %QUBIT* } } %"64_01", 2
  %9 = extractvalue { %QUBIT* } %8, 0
  store %QUBIT* %9, %QUBIT** %"05", align 8
  br label %cond_65_case_1

10:                                               ; preds = %22
  ret void

cond_65_case_0:                                   ; preds = %5
  store { i32, i8* } { i32 1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @1, i32 0, i32 0) }, { i32, i8* }* %"70_0", align 8
  %"70_03" = load { i32, i8* }, { i32, i8* }* %"70_0", align 8
  %11 = extractvalue { i32, i8* } %"70_03", 0
  %12 = extractvalue { i32, i8* } %"70_03", 1
  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @prelude.panic_template.1, i32 0, i32 0), i32 %11, i8* %12)
  call void @abort()
  store %QUBIT* null, %QUBIT** %"71_0", align 8
  %"71_04" = load %QUBIT*, %QUBIT** %"71_0", align 8
  store %QUBIT* %"71_04", %QUBIT** %"0", align 8
  br label %cond_exit_65

cond_65_case_1:                                   ; preds = %7
  %"06" = load %QUBIT*, %QUBIT** %"05", align 8
  store %QUBIT* %"06", %QUBIT** %"73_0", align 8
  %"73_07" = load %QUBIT*, %QUBIT** %"73_0", align 8
  store %QUBIT* %"73_07", %QUBIT** %"0", align 8
  br label %cond_exit_65

cond_exit_65:                                     ; preds = %cond_65_case_1, %cond_65_case_0
  %"02" = load %QUBIT*, %QUBIT** %"0", align 8
  store %QUBIT* %"02", %QUBIT** %"65_0", align 8
  store { {} } undef, { {} }* %"37_0", align 1
  store { {} } undef, { {} }* %"36_0", align 1
  store { {} } undef, { {} }* %"33_0", align 1
  store double 1.500000e+00, double* %"30_0", align 8
  %"30_08" = load double, double* %"30_0", align 8
  %14 = insertvalue { double } undef, double %"30_08", 0
  %15 = insertvalue { { double } } poison, { double } %14, 0
  store { { double } } %15, { { double } }* %"31_0", align 8
  %"65_09" = load %QUBIT*, %QUBIT** %"65_0", align 8
  %"31_010" = load { { double } }, { { double } }* %"31_0", align 8
  %16 = call %QUBIT* @__hugr__.rx.1(%QUBIT* %"65_09", { { double } } %"31_010")
  store %QUBIT* %16, %QUBIT** %"32_0", align 8
  %"32_011" = load %QUBIT*, %QUBIT** %"32_0", align 8
  %17 = call %RESULT* @__quantum__qis__m__body(%QUBIT* %"32_011")
  %18 = call i1 @__quantum__qis__read_result__body(%RESULT* %17)
  %19 = select i1 %18, { i32, {}, {} } { i32 1, {} poison, {} undef }, { i32, {}, {} } { i32 0, {} undef, {} poison }
  store { i32, {}, {} } %19, { i32, {}, {} }* %"34_0", align 4
  %"34_012" = load { i32, {}, {} }, { i32, {}, {} }* %"34_0", align 4
  %20 = extractvalue { i32, {}, {} } %"34_012", 0
  %21 = trunc i32 %20 to i1
  call void @__quantum__rt__bool_record_output(i1 %21, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @2, i32 0, i32 0))
  %"37_013" = load { {} }, { {} }* %"37_0", align 1
  store { {} } %"37_013", { {} }* %"37_0", align 1
  %"37_014" = load { {} }, { {} }* %"37_0", align 1
  switch i32 0, label %22 [
  ]

22:                                               ; preds = %cond_exit_65
  %23 = extractvalue { {} } %"37_014", 0
  br label %10
}

declare %QUBIT* @__quantum__rt__qubit_allocate()

declare %RESULT* @__quantum__qis__m__body(%QUBIT*)

declare i1 @__quantum__qis__read_result__body(%RESULT*)

declare void @__quantum__rt__bool_record_output(i1, i8*)
